#+TITLE: Dev Docs
* Diary
** Postgres
- Postgres is run on Docker
- "scripts/init_db.sh" contains the settings for Postgres and commands to launch the Docker image
** Caching dev dependencies
"cargo-chef" causes memory overload when building on Digital ocean
"cargo-build-deps" worked
** Deploying
*** application on Docker
- in the main source file the db connection pool tries to connect immediately to the db
- the db is not accessible by the app container and therefore panics
*** Deploying application on Digital Ocean
- the spec files from the book do not include the database on initial deployment. without connection to the database (as specified in main.rs), it will panic and fail to deploy

* Docs
** Postgres
- make executable with
#+begin_src shell
cmod +x ./scripts/init_db.sh
#+end_src


- run ~init_db~ to launch Postgres
#+begin_src shell
./scripts/init_db.sh > /dev/null
#+end_src

- if you want to restart the database

#+begin_src shell
docker kill $(docker ps -q)
./scripts/init_db.sh > /dev/null
#+end_src

- can confirm image is running with command

#+begin_src shell
docker ps
#+end_src

** App on Docker
- build image
  #+begin_src shell
  docker build --tag zero2prod --file Dockerfile .
  #+end_src

- launch app
  #+begin_src shell
  docker run -p 8000:8000 zero2prod
  #+end_src

** Routes
Testing routes
*** Health Check
#+begin_src shell :results code
curl --verbose http://127.0.0.1:8000/health_check 2>&1
#+END_SRC
